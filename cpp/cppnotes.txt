// cpp notes 

Syntax of the cpp program:

#include "iostream" // standard header file contains function for input and output stream 

int main() { // entry point to execute the code
  std::cout << "Hello World!"; // print "Hello World!" where std is namespace present in iostream header file
  return 0; 
}


// to print the output
std::cout << variable/datatype << std::endl; // where std::endl to place cursor to next line

// to get the input from user
std::cin >> variable/datatype ;

// to group the different datatype like class we use struct keyword

syntax:
  struct nameOfStruct {
  datatype name ;
  datatype name ;
  };

Example :
  struct myStruct {
  int Age = 10;
  std::string name = "renu"; 
  };

// about reference in cpp
if we assign variable = variable1, if the variable value is changed, it doesn't change the value in variable1, hence we use reference in cpp
example:
  int num1 = 20;
  int num2 = num1;
  std::cout << num1 << std::endl; // output : 20;
  std::cout << num2 << std::endl; // output : 20;

  int num1 = 30;
  std::cout << num1 << std::endl; // output : 30;
  std::cout << num2 << std::endl; // output : 20;

  by using reference (we use symbol "&")
  int num1 = 20;
  int &num2 = num1;
  std::cout << num1 << std::endl; // output : 20;
  std::cout << num2 << std::endl; // output : 20;

  int num1 = 30;
  std::cout << num1 << std::endl; // output : 30;
  std::cout << num2 << std::endl; // output : 30;



// about to store the memory address (to store memory address we use pointer)
syntax : 
  datatype name = value;
  datatype* nameAddress = &name;

  std::cout << name << std::endl; // print value;
  std::cout << nameAddress << std::endl; // print memory address of the name
  std::cout << *nameAddress << std::endl; // print value present in memory address

  // to change the value from pointer
  *nameAddress = newValue; // the new value is add to the same memory, means it will effect on other variable.


